---
format: gfm
---

# DATA 5600 Introduction to Regression and Machine Learning for Analytics

- Monday and Wednesday 1:30-2:45 pm
- Huntsman Hall 260

This course introduces machine learning for business applications, including linear, logistic, and penalized regression. Students learn about the modeling process by building models and communicating results for real-world problems. The course focuses on the assumptions and evaluation of interpretable models. Prerequisites: DATA 3100 and DATA 3300

By the end of this course, students will be able to:

1. Build, evaluate, and interpret models to inform decision-making by non-technical stakeholders.
2. Diagnose and address violations of model assumptions to ensure appropriate model use.
3. Communicate model results clearly in a business context.

<!-- ## Office Hours

- Tuesday and Thursday 3-5 pm or [by appointment](mailto:marc.dotson@usu.edu)
- Eccles Business Building 705 or [over Zoom](https://usu-edu.zoom.us/j/9087876841?pwd=4Nl9sQnSAk3lXfwblJQduriCrzDYok.1) -->

## Data Stack

Each student will need to bring a laptop, either their own or one rented from Utah State. While students are welcome to use their preferred tools, the following [data stack](https://github.com/marcdotson/data-stack) is recommended and certain tools are required, as indicated below.

### Python

[Python](https://en.wikipedia.org/wiki/Python_(programming_language)) is a general purpose, open source programming language developed by computer scientists. It is the most commonly used programming language for data wrangling, visualizations, and modeling. Python will be required for the course. See the [data stack training](https://github.com/marcdotson/data-stack?tab=readme-ov-file#python) for details on how to best install and manage Python versions and project environments.

### Positron

A code editor or integrated development environment (IDE), outside of an open source programming language, is a data analyst's most important tool. [Positron](https://positron.posit.co) is a next-generation data analytics IDE. Built on VS Code's [open source core](https://github.com/microsoft/vscode), Positron combines the multilingual extensibility of [VS Code](https://code.visualstudio.com/) with essential data tools common to language-specific IDEs. See the [data stack training](https://github.com/marcdotson/data-stack?tab=readme-ov-file#sec-positron) for a summary of Positron's data-friendly features.

### GitHub

GitHub is an online hosting service for project repositories managed using Git, a powerful collaboration and [version control system](https://peerj.com/preprints/3159v2/) and the industry standard for software development and data projects. Git and GitHub facilitates collaboration on a single code base and enables students to organize an online portfolio of work. See the [data stack training](https://github.com/marcdotson/data-stack?tab=readme-ov-file#github) for the basics of using Git and GitHub and a [project template](https://github.com/marcdotson/project-template).

### Quarto

[Quarto](https://quarto.org) is an open source publishing system that combines text, code, and output. Quarto documents are similar to Jupyter notebooks, except the content can be rendered into a variety of formats, including PDFs, Word documents, PowerPoint presentations, Revealjs slide decks, interactive dashboards, websites, etc. While Quarto is not required for the course, students will be required to submit code and output in a PDF format. See the [data stack training](https://github.com/marcdotson/data-stack?tab=readme-ov-file#quarto) for more details on Quarto, including how to use Quarto to render a Jupyter notebook into a PDF.

### Copilot

Students may use their preferred AI to assist in studying and completing assignments. All students have access to Copilot through Utah State. However, students must remember that the objective of this course is learning. AI can contribute to learning, including helping to debug code and explain concepts in new ways. AI can also be a detriment to learning, including when students use AI to think for them. See the [data stack training](https://github.com/marcdotson/data-stack?tab=readme-ov-file#copilot) for details on using AI responsibly.

## Study and Success

Students should focus on understanding concepts and mastering skills by using the following study tips.

1. Prepare for class by previewing material and identifying questions.
2. Engage during class by asking questions, taking notes, and actively coding.
3. Apply what you learn in class by completing exercises and working on projects.
4. Evaluate what you're learning by reviewing exercise solutions and taking quizzes.
5. Reinforce what you're learning by utilizing office hours and working with classmates.

After completing the course, student resumes should reflect the tools, skills, and methods they have learned and showcase the projects they have completed. For example:

![](/figures/example-resume.png)

## Assessment

Assignments are designed to be consistent with what students will be expected to do in practice. No credit will be given for late work unless an arrangement is made **prior to the relevant deadline**. Letter grades will follow the standard rubric.

|    |         |    |        |    |        |
| :- | :------ | :- | :----- | :- | :----- |
| A  | 93-100% | B- | 80-82% | D+ | 67-69% |
| A- | 90-92%  | C+ | 77-79% | D  | 63-66% |
| B+ | 87-89%  | C  | 73-76% | D- | 60-62% |
| B  | 83-86%  | C- | 70-72% | E  | 0-59%  |

Students are encouraged to review their graded work and ask questions to avoid repeated mistakes. Letter grades will be determined as follows.

### Exercises (20%)

Each lecture ends with an exercise that is due before the following class when a student will be called on at random to share their solution. While students are encouraged to work together, each student is required to submit their own work. Additionally, for each exercise every student will be randomly assigned to review one other student’s exercise.

Students won’t get credit for an exercise if they don’t submit their exercise on time, aren’t present and prepared to share their exercise when called on at random, or don’t complete their randomly assigned exercise review.

### Quizzes (30%)

While students are encouraged to study in groups, each of the quizzes is to be completed individually, without assistance from other classmates. Each quiz will be available during the associated lectures and is intended to be used as a gauge of how well students understand the course material.

<!-- ### Interviews (30%)

During the first two weeks of class, during the two weeks in the middle of the semester, and during the final two weeks of class each student will have a required 10-minute interview with me where we discuss the course and their efforts and evaluate their understanding. -->

### Projects (50%)

Students will complete two group projects, one focused on multiple regression and another focused on classification. The groups will both present and submit a technical report. The week before the presentations, they will submit a draft of their slides to get feedback and have time for revision. The other students in the class, as well as the group members themselves, will help evaluate each of the presentations.

## Schedule

Please note that the instructor reserves the right to change the following schedule at any time and provide students sufficient notice as it relates to assignment deadlines.

### Week 01

- Regression and Machine Learning
- Modeling Workflow

### Week 02

- Decisions and Data

### Week 03

- Probability and Statistics
- Linear Regression

### Week 04

- Continuous Predictors
- Discrete Predictors

### Week 05

- Assumptions and Diagnostics
- Fitting and Interpreting Linear Regression

### Week 06

- Model Evaluation and Prediction
- Communicating Results

### Week 07

- Presentations

### Week 08

- Generalized Linear Models
- Classification

### Week 09

- Logistic Regression
- Fitting and Interpreting Logistic Regression

### Week 10

- Regularization
- Variable Selection

### Week 11

- Hyperparameter Tuning
- Cross-Validation

### Week 12

- Dimension Reduction
- PCR

### Week 13

- Interactions
- Multilevel Models

### Week 14

- Thanksgiving Break

### Week 15

- Presentations

